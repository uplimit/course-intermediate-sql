key;value
q0_0_1;select * from courses
q0_1_1;select count(*) as cnt from courses
q0_1_2;select * from courses order by nps desc limit 10
q0_1_3;select distinct course_category from courses
q0_1_4;select count(*) as cnt from courses where course_category = 'Machine Learning'
q0_1_5;select distinct course_category from courses where num_weeks > 2 and num_tas > 4
q0_1_6; select distinct course_name from courses where (nps > 85 and num_tas > 3) or not (course_category = 'Machine Learning' or num_tas < 5)
q0_2_1;select min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from courses
q0_2_2;select course_category, min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from courses group by course_category
q0_2_3;select course_category, min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from courses where num_weeks <= 6 group by course_category
q0_2_4;select course_category, min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from courses group by course_category having count(distinct course_name) > 3
q0_2_5;select course_category, min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from courses group by course_category having count(distinct course_name) > 3 order by avg_nps desc limit 1
q0_3_1;select course_category, avg(cast(num_learners_registered as float)/num_tas) as avg_learner_ta_ratio, avg(num_weeks) as avg_num_weeks from courses group by course_category
q1_1_1;select strftime("%Y",start_date) as year, count(*)as count_by_year from courses where course_category = 'Machine Learning' group by strftime("%Y",start_date)
q1_1_2;select distinct course_name, course_category, course_desc from courses where lower(course_name || course_desc) like '%ml%' or lower(course_name || course_desc) like '%learning%' or lower(course_name || course_desc) like '%models%'
q1_1_3;select strftime("%Y",start_date) as year, count(*) as count_by_year from courses where course_category = 'Machine Learning' or course_category = 'Deep Learning' or course_category = 'Language Processing' group by strftime("%Y",start_date)
q1_2_1;select strftime("%Y",start_date) as year, count(*) as count_by_year from courses group by strftime("%Y",start_date)
q1_2_2;select avg(case when strftime("%Y", start_date) = '2020' then nps end) as covid_nps, avg(case when strftime("%Y", start_date) != '2020' then nps end) as rest_nps from courses
q1_2_3;select strftime("%Y",start_date) as year, avg(nps) from courses group by strftime("%Y",start_date)
q1_2_4;select strftime("%Y",start_date) as year, avg(cast(num_learners_registered as float)/num_tas) as learner_ta_ratio, avg(num_weeks) as avg_num_weeks from courses group by strftime("%Y",start_date)
q1_3_1;select case when num_learners_registered < 30 then 'low' when num_learners_registered < 100 then 'medium' when num_learners_registered >= 100 then 'high' end as num_learners_bucket, min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from courses where num_learners_registered is not null group by case when num_learners_registered < 30 then 'low' when num_learners_registered < 100 then 'medium' when num_learners_registered >= 100 then 'high' end
q1_3_2;select case when num_weeks < 4 then 'short' else 'long' end as course_duration, course_level, avg(nps) as avg_nps from courses group by case when num_weeks < 4 then 'short' else 'long' end, course_level
q2_1_1;select count(distinct course_registration_info.learner_id) as distinct_learner_count from course_info inner join course_run on course_info.course_id = course_run.course_id inner join course_registration_info on course_run.course_run_id = course_registration_info.course_run_id where course_info.course_category = 'Machine Learning'
q2_1_2;select strftime("%Y",course_run.start_date) as year, count(distinct course_registration_info.learner_id) as distinct_learner_count from course_info inner join course_run on course_info.course_id = course_run.course_id inner join course_registration_info on course_run.course_run_id = course_registration_info.course_run_id where course_info.course_category = 'Machine Learning' group by strftime("%Y",course_run.start_date)
q2_1_3;select course_run.course_run_id, course_info.course_name, course_info.course_category, course_run.start_date, course_run.nps, count(distinct course_registration_info.learner_id) as distinct_learner_count from course_info inner join course_run on course_info.course_id = course_run.course_id inner join course_registration_info on course_registration_info.course_run_id = course_run.course_run_id where course_info.course_desc like '%machine learning%' group by course_registration_info.course_run_id order by count(distinct learner_id) desc limit 1
q2_1_4;select strftime("%Y",course_run.start_date) as year, count(distinct course_run.course_run_id) as count_by_year from course_info inner join course_run on course_info.course_id = course_run.course_id inner join course_registration_info on course_registration_info.course_run_id = course_run.course_run_id inner join learners on learners.learner_id = course_registration_info.learner_id where course_info.course_category LIKE '%machine learning%' and learners.affiliation like '%bank%' group by strftime("%Y",course_run.start_date)
q2_2_1;select strftime("%Y",course_run.start_date) as year, course_info.course_category as category, count(course_run.course_run_id) as count_by_year from course_info inner join course_run on course_info.course_id = course_run.course_id group by year, course_category order by category asc, year desc
q2_2_2;select avg(case when course_category = 'Machine Learning' then nps end) as machine_learning_nps, avg(case when course_category != 'Machine Learning' then nps end) as rest_nps from course_info inner join course_run on course_info.course_id = course_run.course_id
q2_3_1;select num_weeks, min(nps) as min_nps, max(nps) as max_nps, avg(nps) as avg_nps from course_run group by num_weeks
q2_3_2;select case when num_weeks <= 8 then 'normal' else 'long' end as course_duration, course_level, avg(nps) as avg_nps from course_info inner join course_run on course_info.course_id = course_run.course_id group by course_duration, course_level
q2_3_3;with validcourses as ( select course_info.course_id from course_info inner join course_run on course_info.course_id = course_run.course_id where course_info.course_category = 'Machine Learning' group by course_info.course_id having avg(course_run.nps) > 70 ) select case when course_run.num_weeks <= 8 then 'normal' else 'long' end as course_duration, course_info.course_level, avg(course_run.nps) as avg_nps from validcourses vc inner join course_info on vc.course_id = course_info.course_id inner join course_run on course_info.course_id = course_run.course_id group by case when course_run.num_weeks <= 8 then 'normal' else 'long' end, course_info.course_level
q2_4_1;select ci.course_name, cr.course_run_id, count(l.learner_id) as num_learners, cr.nps from course_info ci inner join course_run cr on ci.course_id = cr.course_id inner join course_registration_info cri on cr.course_run_id = cri.course_run_id inner join learners l on cri.learner_id = l.learner_id inner join instructors i on cr.instructor_id = i.instructor_id where ci.course_level = 'B' and l.affiliation = 'M & T Bank Corporation' and i.affiliation != 'M & T Bank Corporation' group by ci.course_name, cr.course_run_id, cr.nps having count(l.learner_id) > 2 order by ci.course_name, cr.course_run_id
q2_4_2;select CR1.course_run_id, CR2.course_run_id, CR1.nps, CR2.nps, I1.affiliation, I2.affiliation, CR1.start_date, CR2.start_date from (course_run as CR1 inner join instructors as I1 on (CR1.instructor_id = I1.instructor_id)) inner join (course_run as CR2 inner join instructors as I2 on (CR2.instructor_id = I2.instructor_id)) on (CR1.nps +10 < CR2.nps and CR1.start_date < CR2.start_date and CR1.course_id = CR2.course_id and (cast(strftime("%Y",CR1.start_date) as int) +1 >= (cast(strftime("%Y",CR2.start_date) as int)))) where I1.affiliation = 'Cincinnati Financial Corp.'
q3_0_1;with learners_per_run as ( select course_run_id, count(learner_id) as num_learners_registered from course_registration_info group by course_run_id ) select case when lpr.num_learners_registered < 30 then 'low' when lpr.num_learners_registered < 100 then 'medium' else 'high' end as num_learners_bucket, min(cr.nps) as min_nps, max(cr.nps) as max_nps, round(avg(cr.nps)) as avg_nps from course_run cr inner join learners_per_run lpr on cr.course_run_id = lpr.course_run_id group by num_learners_bucket
q3_0_2;with learners_per_run as ( select course_run_id, count(learner_id) as num_learners_registered from course_registration_info group by course_run_id ) select strftime('%Y', start_date) as year, round(avg(num_learners_registered / num_tas)) as learner_ta_ratio, round(avg(num_weeks)) as avg_num_weeks from course_run inner join learners_per_run on course_run.course_run_id = learners_per_run.course_run_id group by strftime('%Y', start_date) 
q3_1_1;select L.name from learners as L left outer  join course_registration_info as CRI on (L.learner_id = CRI.learner_id) where CRI.course_run_id is NULL
q3_1_2;select name from (select name, learner_id from learners  except select L.name, L.learner_id  from learners as L inner join course_registration_info as CRI on (L.learner_id = CRI.learner_id) ) as sq
q3_1_3;select I.instructor_id, name from instructors as I left outer join course_run as CR on (I.instructor_id = CR.instructor_id and num_weeks > 3) where CR.instructor_id is NULL
q3_1_4;select instructor_id, name from instructors except select I.instructor_id, name from instructors as I inner join course_run as CR on (I.instructor_id = CR.instructor_id) where num_weeks > 3
q3_1_5;select affiliation from learners except select affiliation from learners as L inner join  course_registration_info as CRI on  (L.learner_id = CRI.learner_id) inner join  course_run  as CR  on (CRI.course_run_id = CR.course_run_id) and strftime("%Y", start_date) = '2020'
q3_2_1;with averagenps as ( select avg(nps) as overall_nps_average from course_run ), instructormaxnps as ( select i.instructor_id, max(cr.nps) as max_nps from instructors i inner join course_run cr on i.instructor_id = cr.instructor_id group by i.instructor_id ) select imn.instructor_id from instructormaxnps imn inner join averagenps anps on imn.max_nps < anps.overall_nps_average
q3_2_2;select affiliation from instructors except select distinct affiliation from (select distinct affiliation, course_id from instructors as I cross join course_info as CI  where course_category = 'Deep Learning' except select distinct affiliation, CI.course_id from instructors as I inner join course_run as CR on (I.instructor_id = CR.instructor_id) inner join course_info as CI on (CI.course_id = CR.course_id) where course_category = 'Deep Learning' )
q3_2_3;with instructorsweeks as ( select affiliation, sum(num_weeks) as weeks from instructors i left join course_run cr on i.instructor_id = cr.instructor_id group by affiliation ), learnersweeks as ( select affiliation, sum(num_weeks) as weeks from learners l left join course_registration_info cri on l.learner_id = cri.learner_id left join course_run cr on cri.course_run_id = cr.course_run_id group by affiliation ), combinedweeks as ( select affiliation, weeks from instructorsweeks union all select affiliation, weeks from learnersweeks ) select affiliation, sum(weeks) as sum_in_weeks from combinedweeks group by affiliation
q3_2_4;select ci.course_name, ci.course_category, count(crs.learner_id) as num_registrations, rank() over (partition by ci.course_category order by count(crs.learner_id) desc) as rank_in_category from course_info ci left join course_run cr on ci.course_id = cr.course_id left join course_registration_info crs on cr.course_run_id = crs.course_run_id group by ci.course_name, ci.course_category order by ci.course_category, num_registrations desc
